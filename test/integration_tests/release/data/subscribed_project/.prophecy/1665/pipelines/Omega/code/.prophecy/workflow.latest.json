{
  "metainfo" : {
    "id" : "1",
    "uri" : "pipelines/Omega",
    "language" : "scala",
    "fabricId" : "410",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "udfs" : {
      "language" : "scala",
      "udfs" : [ ],
      "functionPackageName" : "pankaj110prophecy.io_team.newproject.functions",
      "sharedFunctionPackageNames" : [ ]
    },
    "udafs" : {
      "language" : "scala",
      "code" : "package udfs\n\nimport org.apache.spark.sql.expressions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\n\n/**\n  * Here you can define your custom aggregate functions.\n  *\n  * Make sure to register your `udafs` in the register_udafs function below.\n  *\n  * Example:\n  *\n  * object GeometricMean extends UserDefinedAggregateFunction {\n  *   // This is the input fields for your aggregate function.\n  *   override def inputSchema: org.apache.spark.sql.types.StructType =\n  *     StructType(StructField(\"value\", DoubleType) :: Nil)\n  *\n  *   // This is the internal fields you keep for computing your aggregate.\n  *   override def bufferSchema: StructType = StructType(\n  *     StructField(\"count\", LongType) ::\n  *     StructField(\"product\", DoubleType) :: Nil\n  *   )\n  *\n  *   // This is the output type of your aggregatation function.\n  *   override def dataType: DataType = DoubleType\n  *\n  *   override def deterministic: Boolean = true\n  *\n  *   // This is the initial value for your buffer schema.\n  *   override def initialize(buffer: MutableAggregationBuffer): Unit = {\n  *     buffer(0) = 0L\n  *     buffer(1) = 1.0\n  *   }\n  *\n  *   // This is how to update your buffer schema given an input.\n  *   override def update(buffer: MutableAggregationBuffer, input: Row): Unit = {\n  *     buffer(0) = buffer.getAs[Long](0) + 1\n  *     buffer(1) = buffer.getAs[Double](1) * input.getAs[Double](0)\n  *   }\n  *\n  *   // This is how to merge two objects with the bufferSchema type.\n  *   override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = {\n  *     buffer1(0) = buffer1.getAs[Long](0) + buffer2.getAs[Long](0)\n  *     buffer1(1) = buffer1.getAs[Double](1) * buffer2.getAs[Double](1)\n  *   }\n  *\n  *   // This is where you output the final value, given the final value of your bufferSchema.\n  *   override def evaluate(buffer: Row): Any = {\n  *     math.pow(buffer.getDouble(1), 1.toDouble / buffer.getLong(0))\n  *   }\n  * }\n  *\n  */\n\n\nobject UDAFs {\n  /**\n    * Registers UDAFs with Spark SQL\n    */\n  def registerUDAFs(spark: SparkSession): Unit = {\n    /**\n      * Example:\n      *\n      * spark.udf.register(\"gm\", GeometricMean)\n      *\n      */\n\n\n  }\n}\n"
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ {
          "name" : "a",
          "kind" : {
            "type" : "string",
            "value" : "a"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        }, {
          "name" : "b",
          "kind" : {
            "type" : "string",
            "value" : "b"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        }, {
          "name" : "c",
          "kind" : {
            "type" : "record",
            "fields" : [ {
              "name" : "d",
              "kind" : {
                "type" : "array",
                "elementType" : {
                  "type" : "record",
                  "fields" : [ {
                    "name" : "t",
                    "kind" : {
                      "type" : "string",
                      "value" : null
                    },
                    "optional" : false,
                    "isWorkflowNodeConfiguration" : false,
                    "isReferenced" : false
                  } ]
                },
                "value" : [ {
                  "t" : "a"
                }, {
                  "t" : "q"
                } ]
              },
              "optional" : false,
              "isWorkflowNodeConfiguration" : false,
              "isReferenced" : false
            }, {
              "name" : "e",
              "kind" : {
                "type" : "record",
                "fields" : [ {
                  "name" : "k",
                  "kind" : {
                    "type" : "string",
                    "value" : "a"
                  },
                  "optional" : false,
                  "isWorkflowNodeConfiguration" : false,
                  "isReferenced" : false
                } ]
              },
              "optional" : false,
              "isWorkflowNodeConfiguration" : false,
              "isReferenced" : false
            } ]
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        } ]
      },
      "oldCommon" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : { },
      "instances" : { },
      "selected" : "default",
      "nonEditable" : [ ],
      "isSubscribedPipelineWithPipelineConfigs" : false
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven",
    "externalDependencies" : [ ],
    "dependentProjectExternalDependencies" : [ ],
    "isImported" : false,
    "interimMode" : "Full",
    "interimModeEnabled" : true,
    "visualCodeInterimMode" : "Full",
    "recordsLimit" : {
      "enabled" : false,
      "value" : 1000
    },
    "topLevelPackage" : "io.prophecy.pipelines.omega",
    "configurationVersion" : "v1"
  },
  "connections" : [ {
    "id" : "ekwjV7_ZN-g3qgch-1qw9$$EEc3193zrOkwqIzIw8gEu",
    "source" : "E60y4MxLxitgsYEFz6q6n$$X5Sc1S3C3sjCTgUt2LxTz",
    "sourcePort" : "oB3ESarrWC2R4XkkOu6YW$$mUOObyoPe-An02XjyVn8d",
    "target" : "-mRkKTbhqlY6211fgL7X2$$SkXWqXzv87H2eCng09_iQ",
    "targetPort" : "9AnDxihQbhZ0BQOOZtUjI$$4HVBKQS1TDqDKiduSuk7U"
  }, {
    "id" : "BPceRPpZHHkgdJhGCELRQ$$TD9qVyiRRMqm8oEaH-k6K",
    "source" : "-mRkKTbhqlY6211fgL7X2$$SkXWqXzv87H2eCng09_iQ",
    "sourcePort" : "5fmItaDQn5_tpsCqEhR-d$$pWWj0MDPkd8m9HgQKrBFD",
    "target" : "hTWI8fxiThKrOtUJ6rpbq$$QsX3BQLyA1LmO_KX-dMPy",
    "targetPort" : "41RouTa_mIz0y_nZYdJWH$$GBLfqJjuxEeAuzN5vuQTn"
  } ],
  "processes" : {
    "E60y4MxLxitgsYEFz6q6n$$X5Sc1S3C3sjCTgUt2LxTz" : {
      "id" : "E60y4MxLxitgsYEFz6q6n$$X5Sc1S3C3sjCTgUt2LxTz",
      "component" : "Source",
      "metadata" : {
        "label" : "newDS",
        "slug" : "newDS",
        "x" : 140,
        "y" : 160,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "oB3ESarrWC2R4XkkOu6YW$$mUOObyoPe-An02XjyVn8d",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      },
      "properties" : {
        "datasetId" : "datasets/newDS"
      }
    },
    "-mRkKTbhqlY6211fgL7X2$$SkXWqXzv87H2eCng09_iQ" : {
      "id" : "-mRkKTbhqlY6211fgL7X2$$SkXWqXzv87H2eCng09_iQ",
      "component" : "Reformat",
      "metadata" : {
        "label" : "Reformat_1",
        "slug" : "Reformat_1",
        "x" : 480,
        "y" : 20,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "9AnDxihQbhZ0BQOOZtUjI$$4HVBKQS1TDqDKiduSuk7U",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "5fmItaDQn5_tpsCqEhR-d$$pWWj0MDPkd8m9HgQKrBFD",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      },
      "properties" : {
        "columnsSelector" : [ ],
        "expressions" : [ ]
      }
    },
    "hTWI8fxiThKrOtUJ6rpbq$$QsX3BQLyA1LmO_KX-dMPy" : {
      "id" : "hTWI8fxiThKrOtUJ6rpbq$$QsX3BQLyA1LmO_KX-dMPy",
      "component" : "Reformat",
      "metadata" : {
        "label" : "Reformat_2",
        "slug" : "Reformat_2",
        "x" : 800,
        "y" : 280,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "41RouTa_mIz0y_nZYdJWH$$GBLfqJjuxEeAuzN5vuQTn",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "2EWCc5PylWkx8rV_ghqda$$tA7aBTxn9bM2Pb8dNacWi",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      },
      "properties" : {
        "columnsSelector" : [ ],
        "expressions" : [ ]
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false
  }
}